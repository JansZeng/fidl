# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# TODO(vardhan): This should be split up to be per-language.
group("legacy_generators") {
  generator_sources = [
      "generators/cpp_templates/enum_macros.tmpl",
      "generators/cpp_templates/interface_declaration.tmpl",
      "generators/cpp_templates/interface_definition.tmpl",
      "generators/cpp_templates/interface_macros.tmpl",
      "generators/cpp_templates/interface_proxy_declaration.tmpl",
      "generators/cpp_templates/interface_request_validator_declaration.tmpl",
      "generators/cpp_templates/interface_response_validator_declaration.tmpl",
      "generators/cpp_templates/interface_stub_declaration.tmpl",
      "generators/cpp_templates/module-common.cc.tmpl",
      "generators/cpp_templates/module-common.h.tmpl",
      "generators/cpp_templates/module-internal.h.tmpl",
      "generators/cpp_templates/module-sync.cc.tmpl",
      "generators/cpp_templates/module-sync.h.tmpl",
      "generators/cpp_templates/module.cc.tmpl",
      "generators/cpp_templates/module.h.tmpl",
      "generators/cpp_templates/struct_declaration.tmpl",
      "generators/cpp_templates/struct_definition.tmpl",
      "generators/cpp_templates/struct_macros.tmpl",
      "generators/cpp_templates/struct_serialization_declaration.tmpl",
      "generators/cpp_templates/struct_serialization_definition.tmpl",
      "generators/cpp_templates/union_declaration.tmpl",
      "generators/cpp_templates/union_definition.tmpl",
      "generators/cpp_templates/union_serialization_declaration.tmpl",
      "generators/cpp_templates/union_serialization_definition.tmpl",
      "generators/cpp_templates/validation_macros.tmpl",
      "generators/cpp_templates/wrapper_class_declaration.tmpl",
      "generators/cpp_templates/wrapper_class_definition.tmpl",
      "generators/cpp_templates/wrapper_union_class_declaration.tmpl",
      "generators/cpp_templates/wrapper_union_class_definition.tmpl",
      "generators/dart_templates/encoding_macros.tmpl",
      "generators/dart_templates/enum_definition.tmpl",
      "generators/dart_templates/interface_definition.tmpl",
      "generators/dart_templates/module.lib.tmpl",
      "generators/dart_templates/module_definition.tmpl",
      "generators/dart_templates/struct_definition.tmpl",
      "generators/dart_templates/union_definition.tmpl",
      "generators/fidl_cpp_generator.py",
      "generators/fidl_dart_generator.py",
      "generators/fidl_python_generator.py",
      "generators/python_templates/module.py.tmpl",
      "generators/python_templates/module_macros.tmpl",
      "pylib/mojo_bindings/__init__.py",
      "pylib/mojo_bindings/descriptor.py",
      "pylib/mojo_bindings/interface_reflection.py",
      "pylib/mojo_bindings/messaging.py",
      "pylib/mojo_bindings/promise.py",
      "pylib/mojo_bindings/reflection.py",
      "pylib/mojo_bindings/serialization.py",
      "pylib/mojo_system.py",
      "pylib/mojom/__init__.py",
      "pylib/mojom/error.py",
      "pylib/mojom/fileutil.py",
      "pylib/mojom/generate/__init__.py",
      "pylib/mojom/generate/constant_resolver.py",
      "pylib/mojom/generate/generated/__init__.py",
      "pylib/mojom/generate/generated/fidl_files_fidl.py",
      "pylib/mojom/generate/generated/fidl_types_fidl.py",
      "pylib/mojom/generate/generator.py",
      "pylib/mojom/generate/module.py",
      "pylib/mojom/generate/mojom_translator.py",
      "pylib/mojom/generate/pack.py",
      "pylib/mojom/generate/template_expander.py",
      "pylib/mojom/parse/__init__.py",
      "pylib/mojom/parse/parser_runner.py",
      "run_code_generators.py",
  ]
  deps = []
  i = 1
  foreach(source, generator_sources) {
    target_name = "legacy_generators_copy_$i"
    copy(target_name) {
      sources = [ source ]
      outputs = [ "$root_out_dir/legacy_generators/$source" ]
    }
    deps += [ ":$target_name" ]
    i = i + 1
  }
}
